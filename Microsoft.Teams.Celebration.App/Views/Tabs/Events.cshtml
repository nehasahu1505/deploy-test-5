@using Microsoft.Teams.Celebration.App.Helpers;
@using Microsoft.Teams.Celebration.App.Models;
@{
    Layout = null;
}

@model IEnumerable<Events>

<!DOCTYPE html>

<html class="grey-background">
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Events</title>
    @Styles.Render("~/Content//bootstrap-3.4.min.css")
    @Styles.Render("~/Content/tabStyles.css")

    @Scripts.Render("~/Scripts/jquery-1.11.3.min.js")
    @Scripts.Render("~/Scripts/microsoftTeams-1.4.1.min.js")
    @Scripts.Render("~/Scripts/bootstrap-3.4.min.js")
</head>
<body id="bodyEvents" class="text-style-body" style="background-color: transparent;">
    @if (Model.AsEnumerable().ToList().Count == 0)
    {
        // Empty state div
        <div id="divEmptyStateforTab" style="margin-top:20px;text-align:center;">
            <div id="emptyEvent" style="display:inline-block;">
                <div>
                    <img src="../../Content/Images/empty-state-celebrations.png" class="empty-event-image" />
                </div>
                <div style="margin-top:5px;">
                    <b class="empty-event-header"> Start Celebrating with your team today.</b>
                </div>
                <div class="empty-event-regular-text">
                    Create share special events
                </div>
                <div style="margin-top:20px">
                    <button class="empty-button-primary" style="cursor:pointer;" onclick="showNewEventTaskModule();">New Event</button>
                </div>
            </div>
        </div>
    }
    else
    {
        // Represents events in the form of tiles.
        <div id="eventList">
            @foreach (var celebrationEvent in Model)
            {
            <div class="event-tile" id="event">
                <div class="event-title-text">
                    @celebrationEvent.Title
                </div>
                <div class="dropdown" style="display:inline;float:right">
                    <button class="dropdown-toggle" type="button" data-toggle="dropdown" style="background:none;border:none">
                        ...
                    </button>
                    <ul class="dropdown-menu">
                        <li><a href="#"> Edit </a></li>
                        <li><a href="#"> Delete </a></li>
                    </ul>
                </div>
                <div class="event-date-text event-date-style">
                    @celebrationEvent.Date.ToString("MMMM dd")
                </div>
                <div class="empty-dev-style">

                </div>
                <div class="message-title-text event-message-title-style">
                    Message
                </div>
                <div class="event-message-text event-message-style">
                    @celebrationEvent.Message
                </div>
                <div style="height:21px">

                </div>
                <div>
                    <img src="@celebrationEvent.ImageURL" alt="" class="event-image" />
                </div>
            </div>
            }

            @if(Model.AsEnumerable().ToList().Count < 5)
            {
                // New event tile. It allows user to add new events.
                <div class="event-tile" id="NewEventTile">
                    <div class="event-title-text ghost-event-title-text-opacity">
                        New Event
                    </div>
                    <div class="ghost-event-date-text event-date-style">
                        Date
                    </div>
                    <div class="empty-dev-style">

                    </div>
                    <div class="message-title-text event-message-title-style">
                        Message
                    </div>
                    <div class="ghost-event-message-text event-message-style">
                        Create new event to add message
                    </div>
                    <div style="height:21px">

                    </div>
                    <div>
                        <img src="../../Content/Images/Celebrations-bot_image-12_new_event.png" alt="" class="event-image" />
                    </div>
                </div>
            }
        </div>
        if (Model.AsEnumerable().ToList().Count < 5)
        {
            <div style="padding-top:32px;padding-left:8px;">
                <button class="empty-button-primary" onclick="showNewEventTaskModule();">New Event</button>
            </div>
        }
        else
        {
            <div>
                Ypu have exhausted the limit on total no. of events.
            </div>
        }
    }

    <script>
        var microsoftTeams;

        microsoftTeams.initialize();
        
        submitHandler = (err, result) => {
            if (result) {
                $.ajax({
                    url: "/Tabs/SaveEvent",
                    type: "Post" ,
                    data: JSON.stringify(result),
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {

                    },
                });
            }
        };

        function showNewEventTaskModule() {
            let taskInfo = {
                title: "Manage Events",
                height: "1018px",
                width: "514px",
                url: null,
                card: null,
                fallbackUrl: null,
                completionBotId: null,
            };
            taskInfo.url = "@(ApplicationSettings.BaseUrl)" + "/Tabs/ManageEvents";;
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.startTask(taskInfo, submitHandler);
        }

    </script>
</body>
</html>
